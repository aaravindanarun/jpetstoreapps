<?xml version="1.0"?>
<!-- Copyright 2010-2013 the original author or authors. Licensed under the 
	Apache License, Version 2.0 (the "License"); you may not use this file except 
	in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.mybatis</groupId>
	<version>6.0.2-SNAPSHOT</version>
	<artifactId>jpetstore</artifactId>
	<packaging>war</packaging>

	<name>JPetStore Demo 6</name>
	<url>http://www.mybatis.org</url>

	<scm>
		<url>http://github.com/mybatis/jpetstore</url>
		<connection>scm:git:ssh://github.com/mybatis/jpetstore.git</connection>
		<developerConnection>scm:git:git+ssh://git@github.com/mybatis/jpetstore.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>GitHub Issue Management</system>
		<url>https://github.com/mybatis/jpetstore/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Travis CI</system>
		<url>https://travis-ci.org/jpetstore/guice</url>
	</ciManagement>
	<distributionManagement>
		<site>
			<id>github</id>
			<url>gitsite:git@github.com/mybatis/jpetstore.git</url>
		</site>
	</distributionManagement>
	<dependencies>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.stripes</groupId>
			<artifactId>stripes</artifactId>
			<version>1.5.7</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<exclusions>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.2.8</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_core</artifactId>
			<version>2.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_java</artifactId>
			<version>2.9</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>jpetstore</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<overwrite>true</overwrite>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.1</version>
			</plugin>

			<!-- This plugin is for eclipse -->
			<!-- <plugin> <artifactId>maven-eclipse-plugin</artifactId> <version>2.9</version> 
				<configuration> <pde>true</pde> </configuration> </plugin> <plugin> <groupId>org.jenkins-ci.tools</groupId> 
				<artifactId>maven-hpi-plugin</artifactId> <version>1.95</version> </plugin> -->
		</plugins>
	</build>

	<!-- To make the builds more faster instead of "clean" we can rename/move 
		the "target" directory to a trash location the following profile does the 
		same and it needs the Ant Maven plugin. The profile can be executed by the 
		"P" option and it will rename to current time stamp value and move it to 
		trash directory -->
	<profiles>
		<profile>
			<id>qclean</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>rename_target</id>
								<phase>pre-clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<tstamp>
											<format property="targetTstamp" pattern="yyyyMMdd-HHmmss"
												locale="en,US" />
										</tstamp>
										<move todir="trash/target-${targetTstamp}" failonerror="false">
											<fileset dir="target/" />
										</move>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- This profile will delete the "trash" directory created in the above 
			step and will run as a background job -->
		<profile>
			<id>cleanup</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>clean_trash</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete dir="trash/" failonerror="false" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- We can skip the executing the test cases every time using this profile 
			id This will not even compile the test case files. This is not included with 
			other profiles as some times the user wants to run the build with test cases -->
		<profile>
			<id>qbuild</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>

	</profiles>

	<!-- This reporting tag used to execute the PMD plugin which comes along 
		with Maven for code quality. Though current directory mentioned as the output 
		and target directory the pmd.xml or the cmd.xml files are created in the 
		target directory -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<outputDirectory>.</outputDirectory>
					<targetDirectory>.</targetDirectory>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.6</targetJdk>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
